Preparing Escherichia coli genomes for analysis (misc-data/Ecoli-assembly_summary_refseq_10June2021.txt)
====================================================================
(1) Selecting Escherichia coli species.
From the NCBI assembly_summary_refseq.txt downloaded on 10th June 2021, we extracted the assembly accession if the column "organism_name" contains "Escherichia coli". This resulted in 23547 assembly accession ID.

(2) Selecting assembly_accession with complete genome.
The output from step (1) above is further filtered to include only assembly_accession with "Complete Genome" assembly level. This can be identified from the column "assembly_level". This resulted in 1626 genome assemblies with "Complete Genome" assembly level.

(3) Excluding phage genome and assembly with different sequence between RefSeq and GenBank.
From the column "organism_name", we noticed that two genome assemblies belong to E. coli O157 typing phage 3 and 6 respectively. They are GCF_002604825.1 and GCF_002604865.1.
From the column "paired_asm_comp", we noticed two genome assemblies have "different" sequence between RefSeq and GenBank, i.e. GCF_000184185.1 and GCF_002925525.1. 
These four assembly accession are excluded and we have a final set of 1622 assembly_accession.


Installing necessary scripts and programs
==========================
We have put the codes readily available in the "scripts" folder.
Please note that the codes are tested on Ubuntu 18.04.3 LTS

Prerequisite:
- Perl 5, version 26, subversion 1 (v5.26.1)

The "scripts/perl-lib" folder is the necessary PERL libraries to run the scripts. Please add the PERL5LIB to your $HOME/.profile
	export PERL5LIB=$PERL5LIB:/path/to/scripts/perl-lib/

The "scripts/perl-scripts" folder contains the PERL scripts to run analysis. You can add the folder to your $HOME/.profile (if necessary). 
	export PATH=$PATH:/path/to/scripts/perl-scripts:.

Other external programs needed (please install following the instructions from the respective page):
- fastANI: https://github.com/ParBLiSS/FastANI (version 1.32)
- CD-HIT: https://github.com/weizhongli/cdhit (version 4.7 built on Jul  1 2017)
- ProteinOrtho: https://gitlab.com/paulklemm_PHD/proteinortho (version 6.0.27)
- roary: https://sanger-pathogens.github.io/Roary/ (version 3.11.2)
- MLST: https://cge.cbs.dtu.dk/services/MLST/ (software version 2.0.4; database version 2.0.0)
- SerotypeFinder: https://cge.cbs.dtu.dk/services/SerotypeFinder/ (software version 2.0.1; database version 1.0.0)
- VirulenceFinder: https://cge.cbs.dtu.dk/services/VirulenceFinder/ (software version 2.0.3; database 2020-05-29)
- ResFinder: https://cge.cbs.dtu.dk/services/ResFinder/ (software version 4.1; database 2021-08-16) 

To remove highly similar genome sequences from the analysis, which in turn reduces redundancy in our dataset, we used fastANI version 1.32 with default parameters to calculate the pairwise average nucleotide identity (ANI) of all the 1,622 genomes. If the pairwise ANI is greater than 99.99%, then the genome with larger size was kept and the smaller genome was excluded from analysis. This step left us with 1324 genomes. 
We have prepared a batch script to process this:
(1) run-fastANI-1622genomes.sh (To run in parallel: scripts/perl-scripts/distribute-jobs -i run-fastANI-1622genomes.sh)
This will create a folder called "output/".
(2) Run the script "scripts/perl-scripts/samples-selection-fastANI"
perl scripts/perl-scripts/samples-selection-fastANI -i misc-data/1622genomes-ordered.txt -f output -t 99.99
"-i 1622genomes-ordered.txt" should be ordered according to genome size, except for the first one which is our reference genome, i.e. K-12 MG1655.
"-f output" is the output folder that contains the fastANI output
"-t 99.99" is the threshold (99.99%) to consider two genomes are very similar.
This script will print the selected genomes to the screen and create a separate file named "dropsamples.txt" which contains the details of which genome is dropped and the reason behind its dropping.

Getting the homologous clusters (Gene Families):
1. For each genome: finding highly homologous protein sequences at SeqID=98% and SeqCov=90% and then select the longest protein sequence as representative sequence.
perl scripts/perl-scripts/preprocess-fasta -i list-of-proteome-files.txt -x -m cdhit -s 98 -l 100
[Note: This step will produce the file: "merged.faa" and the folder: "homologs". The file "merged.faa" contains all the protein sequences from all genomes and the homologous sequences in each genome has been excluded. The "homologs" folder contains the homologous sequences from each genome with the first column as the representative sequence of the homologous sequences. Concatenate all files inside "homologs" folder to get the file "all-within-genome.groups"]

2. Finding core genomes with at least 98% SeqID across all the genomes using the program iterative_cdhit (from Roary package)
- iterative_cdhit -m merged.faa -n 1324 -l 98.0 -s 0.5
[Note: This will produce the files: merged.faa and merged.faa.coregenes]

3. Finding homologous protein sequences at SeqID=90% and SeqCov=90% from the merged.faa and then select the longest protein sequence as representative sequence.
- cd-hit -i merged.faa -c 0.90 -s 0.90 -n 5 -o cdhit-c0.90-s0.90.out -d 50
[Note: the output cdhit-c0.90-s0.90.out will be used to iteratively finding the best parameters for finding cluster of homologous genes (gene families). Renamed this file to 52798sequences.faa. Note that this 52798 representative sequences come from 1272 genomes; whereas the other 52 genomes can be represented by these 1272 genomes. This will be given as two additional files: 1272genomes.txt and 52additionalGenome.txt]
- Create list of homologous sequences based on CD-HIT SeqID=90% and SeqCov=90% (File: mylist-id90-cov90.txt)
[Note: use scripts/misc-scripts/get-id90-cov90-list.sh]

4. Running CD-HIT and ProteinOrtho for each SeqID and SeqCov
For CD-HIT: SeqID=60, SeqCov=60, word_length=4
- cd-hit -i 52798sequences.faa -c 0.60 -s 0.60 -n 3 -d 50 -M 16000 -o cdhit-c60-s60.out
- scripts/perl-scripts/cdhit2proteinortho -i cdhit-c60-s60.out -l misc-data/1272genomes.txt > output-cdhit-id60-cov60.txt
- scripts/perl-scripts/merge-clusters -i output-cdhit-id60-cov60.txt-remerged -l mylist-id90-cov90.txt -g misc-data/52additionalGenome.txt
- scripts/perl-scripts/reinflate-clusters -i output-cdhit-id60-cov60.txt-remerged -l merged.faa.coregenes
- scripts/perl-scripts/merge-clusters -i output-cdhit-id60-cov60.txt-remerged-reinflate -l all-within-genome.groups
- mv output-cdhit-id60-cov60.txt-remerged-reinflate-remerged final-output-cdhit-id60-cov60.txt

For ProteinOrtho: SeqID=60, SeqCov=60
- proteinortho_nobest -p=blastp+ -identity=60 -cov=60 -selfblast -mcl -project=myproject-id60-cov60 52798sequences.faa
- scripts/perl-scripts/selfblast2proteinortho -i myproject-id60-cov60.proteinortho.tsv -l misc-data/1272genomes.txt > output-proteinortho-id60-cov60.txt
- scripts/perl-scripts/add-singletons -i output-proteinortho-id60-cov60.txt -l allproteins.txt [Note: allproteins.txt is the protein ID from the 52798sequences.faa]
- scripts/perl-scripts/merge-clusters -i output-proteinortho-id60-cov60.txt-all -l mylist-id90-cov90.txt -g misc-data/52additionalGenome.txt
- scripts/perl-scripts/reinflate-clusters -i output-proteinortho-id60-cov60.txt-all-remerged -l merged.faa.coregenes
- scripts/perl-scripts/merge-clusters -i output-proteinortho-id60-cov60.txt-all-remerged-reinflate -l all-within-genome.groups
- mv output-proteinortho-id60-cov60.txt-all-remerged-reinflate-remerged final-output-proteinortho-id60-cov60.txt

5. Compare clusters from CD-HIT and ProteinOrtho
- scripts/perl-scripts/get-jaccard-index -i final-output-cdhit-id60-cov60.txt -j final-output-proteinortho-id60-cov60.txt

6. Run reclustering
- scripts/misc-scripts/run-recluster-CD-HIT.sh
- scripts/misc-scripts/run-recluster-ProteinOrtho.sh

Identification of Softcore Genome
=================================
Softcore genome can be obtained from the file "final-output-cdhit-id60-cov60.txt" (for CD-HIT) or "final-output-proteinortho-id60-cov60.txt" (for ProteinOrtho).
The first column defines how many species carry the gene family (GF). Therefore, if the definition of softcore genome is 95%, then the number of species in the first column should be at least 0.95 x 1324 genomes = 1257.8 genomes (i.e. 1258 genomes). 

ClermonTyping, Serotyping, Virulence Factor Typing, Resistance Typing
=====================================================================
ClermonTyping
- mlst.py -i GCF_000005845.1.fasta -s ecoli -p mlst_db -o GCF_000005845.mlst -x -mp blastn

Serotyping
- serotypefinder.py -i GCF_000005845.1.fasta -p serotypefinder_db -o GCF_000005845.serotype -x -mp blastn

Virulence Factor Typing
- virulencefinder.py -i GCF_000005845.1.fasta -p virulencefinder_db -l 0.6 -t 0.8 -d "virulence_ecoli" -o GCF_000005845.vir -x -mp blastn

Resistance Typing
- run_resfinder.py -ifa GCF_000005845.1.fasta -s "Escherichia coli" -l 0.6 -t 0.8 --acquired --point -b blastn -k kma -db_res_kma db_resfinder_kma -db_point_kma db_pointfinder -o GCF_000005845.resfinder

